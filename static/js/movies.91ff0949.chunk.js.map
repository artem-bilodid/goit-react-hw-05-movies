{"version":3,"sources":["components/MoviesList/MoviesList.module.scss","components/MoviesList/MoviesList.jsx","views/Movies/Movies.module.scss","components/SearchForm/SearchForm.module.scss","components/SearchForm/SearchForm.jsx","views/Movies/Movies.jsx"],"names":["module","exports","MoviesList","movies","location","map","id","title","className","s","link","to","state","from","SearchForm","onFormSubmit","searchForm","onSubmit","input","type","name","Movies","props","useSearchParams","searchParams","setSearchParams","useLocation","useState","setMovies","get","query","setQuery","updateMoviesList","useCallback","a","searchMovies","data","useEffect","event","preventDefault","normalizedQuery","target","searchQuery","value","trim","Container","searchContainer","length","Card"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,KAAO,2B,qGCgBVC,EAdI,SAAC,GAA+B,IAAD,IAA5BC,cAA4B,MAAnB,GAAmB,EAAfC,EAAe,EAAfA,SACjC,OACE,6BACGD,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,6BACE,cAAC,IAAD,CAAMC,UAAWC,IAAEC,KAAMC,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMT,GAA7D,SACGG,KAFID,U,mBCNjBN,EAAOC,QAAU,CAAC,gBAAkB,kC,mBCApCD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,4B,kMCUvDa,EATI,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OACE,uBAAMP,UAAWC,IAAEO,WAAYC,SAAUF,EAAzC,UACE,uBAAOP,UAAWC,IAAES,MAAOC,KAAK,OAAOC,KAAK,gBAC5C,gD,cC8CSC,EA3CA,SAAAC,GAAU,IAAD,EACtB,EAAwCC,cAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACMrB,EAAWsB,cAEjB,EAA4BC,mBAAS,IAArC,mBAAOxB,EAAP,KAAeyB,EAAf,KACA,EAA0BD,mBAAQ,UAACH,EAAaK,IAAI,gBAAlB,QAA8B,IAAhE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAmBC,sBAAW,sBAAC,4BAAAC,EAAA,yDAC9BJ,EAD8B,iEAGhBK,YAAaL,GAHG,OAG7BM,EAH6B,OAInCR,EAAUQ,GAJyB,2CAKlC,CAACN,IAEJO,oBAAUL,EAAkB,CAACA,IAE7B,IAAMjB,EAAY,uCAAG,WAAMuB,GAAN,eAAAJ,EAAA,yDACnBI,EAAMC,iBACAC,EAAkBF,EAAMG,OAAOC,YAAYC,MAAMC,OAFpC,iDAMnBnB,EAAgB,CAAEK,MAAOU,IACzBT,EAASS,GAPU,2CAAH,sDAUlB,OACE,+BACE,eAACK,EAAA,EAAD,WACE,+CACA,qBAAKrC,UAAWC,IAAEqC,gBAAlB,SACE,cAAC,EAAD,CAAY/B,aAAcA,MAE3BZ,EAAO4C,OAAS,GACf,cAACC,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,CAAYC,OAAQA,EAAQC,SAAUA","file":"static/js/movies.91ff0949.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"MoviesList_link__2nzIX\"};","import s from './MoviesList.module.scss';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies = [], location }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link className={s.link} to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"Movies_searchContainer__3zsWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__12H_N\",\"input\":\"SearchForm_input__1R9n4\"};","import s from './SearchForm.module.scss';\n\nconst SearchForm = ({ onFormSubmit }) => {\n  return (\n    <form className={s.searchForm} onSubmit={onFormSubmit}>\n      <input className={s.input} type=\"text\" name=\"searchQuery\" />\n      <button>Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import s from './Movies.module.scss';\nimport Container from './../../components/Container';\nimport { useState, useCallback, useEffect } from 'react';\nimport { searchMovies } from '../../js/api/movies-api';\nimport MoviesList from '../../components/MoviesList';\nimport Card from './../../components/Card';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nconst Movies = props => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState(searchParams.get('query') ?? '');\n\n  const updateMoviesList = useCallback(async () => {\n    if (!query) return;\n\n    const data = await searchMovies(query);\n    setMovies(data);\n  }, [query]);\n\n  useEffect(updateMoviesList, [updateMoviesList]);\n\n  const onFormSubmit = async event => {\n    event.preventDefault();\n    const normalizedQuery = event.target.searchQuery.value.trim();\n\n    if (!normalizedQuery) return;\n\n    setSearchParams({ query: normalizedQuery });\n    setQuery(normalizedQuery);\n  };\n\n  return (\n    <main>\n      <Container>\n        <h1>Search Movies</h1>\n        <div className={s.searchContainer}>\n          <SearchForm onFormSubmit={onFormSubmit} />\n        </div>\n        {movies.length > 0 && (\n          <Card>\n            <MoviesList movies={movies} location={location} />\n          </Card>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"sourceRoot":""}